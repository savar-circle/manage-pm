# Generated by Django 4.1.7 on 2023-03-11 07:56

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChalanReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chalanReportDate', models.DateField(auto_now_add=True)),
                ('chalanReport', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PmList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pmNo', models.IntegerField(default=0)),
                ('pmdate', models.DateField(default=datetime.date.today)),
                ('uniquepmid', models.CharField(max_length=16, unique=True)),
                ('hospitalName', models.CharField(max_length=256)),
                ('doctorName', models.CharField(blank=True, max_length=256, null=True)),
                ('victimName', models.CharField(max_length=256)),
                ('referencePS', models.CharField(max_length=32)),
                ('referenceType', models.CharField(max_length=64)),
                ('referenceNo', models.IntegerField(default=0)),
                ('referenceDate', models.DateField(default=datetime.date.today)),
                ('referenceSection', models.CharField(blank=True, max_length=256, null=True)),
                ('reminderNo', models.IntegerField(default=0)),
                ('lastMemoNo', models.IntegerField(default=0)),
                ('lastMemoDate', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(default='pending', max_length=64)),
                ('investofficer', models.CharField(max_length=256)),
                ('caringcong', models.CharField(max_length=256)),
                ('pmavailablity', models.CharField(max_length=16)),
                ('pmstatus', models.CharField(max_length=16)),
                ('dnaavailablity', models.CharField(max_length=16)),
                ('dnastatus', models.CharField(max_length=16)),
                ('maavailablity', models.CharField(max_length=16)),
                ('mastatus', models.CharField(max_length=16)),
                ('caavailablity', models.CharField(max_length=16)),
                ('castatus', models.CharField(max_length=16)),
                ('otheravailablity', models.CharField(max_length=16)),
                ('otherstatus', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='PmReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pmReportDate', models.DateField(auto_now_add=True)),
                ('pmReport', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('psname', models.CharField(blank=True, max_length=255, null=True)),
                ('pschache', models.CharField(blank=True, max_length=255, null=True)),
                ('casechache', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
